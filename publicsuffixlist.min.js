/*******************************************************************************

    publicsuffixlist.js - an efficient javascript implementation to deal with
    Mozilla Foundation's Public Suffix List <http://publicsuffix.org/list/>
    Copyright (C) 2013  Raymond Hill

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see {http://www.gnu.org/licenses/}.

    Home: https://github.com/gorhill/publicsuffixlist.js
*/
function PublicSuffixList(){this.exceptions={};this.rules={};this.cutoffLength=480}PublicSuffixList.prototype.getDomain=function(a){if(!a||a.charAt(0)==="."){return""
}a=a.toLowerCase();var b=this.getPublicSuffix(a);if(b===a){return""}var c=a.lastIndexOf(".",a.lastIndexOf(".",a.length-b.length)-1);
if(c<=0){return a}return a.slice(c+1)};PublicSuffixList.prototype.getPublicSuffix=function(a){if(!a){return""}var b;while(true){b=a.indexOf(".");
if(b<0){break}if(this.search(this.exceptions,a)){return a.slice(b+1)}if(this.search(this.rules,a)){return a}if(this.search(this.rules,"*"+a.slice(b))){return a
}a=a.slice(b+1)}return a};PublicSuffixList.prototype.mustPunycode=/[^a-z0-9.-]/;PublicSuffixList.prototype.isDomain=function(a){return PublicSuffixList.getDomain(a)===a
};PublicSuffixList.prototype.isPublicSuffix=function(a){return this.getPublicSuffix(a)===a};PublicSuffixList.prototype.search=function(j,g){var f=g.lastIndexOf(".");
var b,m;if(f<0){b=g;m=g}else{b=g.slice(f+1);m=g.slice(0,f)}var h=j[b];if(!h){return false}if(typeof h==="string"){return h.indexOf(" "+m+" ")>=0
}var c=m.length;var n=h[c];if(!n){return false}var a=0;var k=Math.floor(n.length/c+0.5);var e,d;while(a<k){e=a+k>>1;d=n.substr(c*e,c);
if(m<d){k=e}else{if(m>d){a=e+1}else{return true}}}return false};PublicSuffixList.prototype.parse=function(g,e){var a=this.exceptions={};
var h=this.rules={};var j=g.split("\n");var c=j.length;var k,f,d,b;while(c--){k=j[c];d=k.indexOf("//");if(d>=0){k=k.slice(0,d)
}k=k.trim();if(!k){continue}k=k.toLowerCase();if(this.mustPunycode.test(k)){k=e(k)}if(k.charAt(0)==="!"){f=a;k=k.slice(1)
}else{f=h}d=k.lastIndexOf(".");if(d<0){b=k}else{b=k.slice(d+1);k=k.slice(0,d)}if(!f[b]){f[b]=[]}if(k){f[b].push(k)}}this.crystallize(a);
this.crystallize(h)};PublicSuffixList.prototype.crystallize=function(b){var f=this.cutoffLength;var d,g,e,a;for(var c in b){if(!b.hasOwnProperty(c)){continue
}d=b[c].join(" ");if(!d){b[c]="";continue}if(d.length<f){b[c]=" "+d+" ";continue}e=b[c].length;d=[];while(e--){g=b[c][e];
a=g.length;if(!d[a]){d[a]=[]}d[a].push(g)}a=d.length;while(a--){if(d[a]){d[a]=d[a].sort().join("")}}b[c]=d}return b};
